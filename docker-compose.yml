version: '3'
services:
  # nginx:
  #   build: ./infra-docker-store/webserver
  #   container_name: "nginxContainer"
  #   volumes:
  #     - ./backend/src:/var/www
  #     - ./infra-docker-store/webserver/default.conf:/etc/nginx/conf.d/default.conf
  #   ports:
  #     - 80:80
  #   depends_on:
  #     - php
  #   networks:
  #     - app-network

  php:
    build: ./infra-docker-store/backend
    container_name: "laravelContainer"
    volumes:
      - ./backend/src:/var/www
    ports:
    - 8000:8000
    networks:
      - app-network
      
  frontend:
    build: ./infra-docker-store/frontend
    container_name: "reactContainer"
    tty: true
    volumes:
      - ./frontend:/var/www
    ports:
      - 3000:3000
    depends_on:
      - php
    networks:
      - app-network

  db: 
    build: ./infra-docker-store/db
    container_name: "mysqlContainer"
    environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: mysql_db
        MYSQL_USER: user
        MYSQL_PASSWORD: password
        TZ: 'Asia/Tokyo'
    ports:
        - 3306:3306
    volumes:
      - db_data:/var/lib/mysql
      - db_my.cnf:/etc/mysql/conf.d/my.cnf
      - db_sql:/docker-entrypoint-initdb.d

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: "phpmyadminContainer"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=db
      - PMA_USER=user
      - PMA_PASSWORD=password
    links:
      - db
    ports:
      - 8088:80
    volumes:
      - ./phpmyadmin/sessions:/sessions

  # mail:
  #   image: mailhog/mailhog
  #   container_name: "mailhog"
  #   ports:
  #     - 8025:8025

volumes:
  db_data:
  db_my.cnf:
  db_sql:

networks:
  app-network:
    driver: bridge
